import { defaultNumberCompactFormatter } from "./index";

describe("defaultNumberCompactFormatter", () => {
  test.each([
    // en-GB
    [undefined, "en-GB", { suffix: "", value: "" }],
    [null, "en-GB", { suffix: "", value: "" }],
    ["notANumber", "en-GB", { suffix: "", value: "" }],
    [NaN, "en-GB", { suffix: "", value: "" }],
    // eslint-disable-next-line @typescript-eslint/no-loss-of-precision
    [123456789123456789123, "en-GE", { suffix: "E20", value: "1.2345" }],
    [123.45, "en-GB", { suffix: "", value: "123.45" }],
    [1234.5, "en-GB", { suffix: "", value: "1,234.5" }],
    [12345, "en-GB", { suffix: "", value: "12,345" }],
    [12345.4, "en-GB", { suffix: "", value: "12,345" }],
    [12345.45, "en-GB", { suffix: "", value: "12,345" }],
    [12345.456, "en-GB", { suffix: "", value: "12,345" }],
    [12345.5, "en-GB", { suffix: "", value: "12,346" }],
    [12345.55, "en-GB", { suffix: "", value: "12,346" }],
    [12345.556, "en-GB", { suffix: "", value: "12,346" }],
    [123450.456, "en-GB", { suffix: "K", value: "123.45" }],
    [123450.556, "en-GB", { suffix: "K", value: "123.45" }],
    [1234500.4, "en-GB", { suffix: "M", value: "1.2345" }],
    [1234500.5, "en-GB", { suffix: "M", value: "1.2345" }],
    [1234500, "en-GB", { suffix: "M", value: "1.2345" }],
    [1000000000, "en-GB", { suffix: "B", value: "1" }],
    [1233222111, "en-GB", { suffix: "B", value: "1.2332" }],
    [0.5678999, "en-GB", { suffix: "", value: "0.5679" }],
    [0.5678444, "en-GB", { suffix: "", value: "0.5678" }],
    [0.0000056, "en-GB", { suffix: "", value: "0.00" }],
    [0.0000956, "en-GB", { suffix: "", value: "0.0001" }],
    [0.0000456, "en-GB", { suffix: "", value: "0.00" }],
    [-123.45, "en-GB", { suffix: "", value: "-123.45" }],
    [-1234.5, "en-GB", { suffix: "", value: "-1,234.5" }],
    [-12345, "en-GB", { suffix: "", value: "-12,345" }],
    [-12345.4, "en-GB", { suffix: "", value: "-12,345" }],
    [-12345.45, "en-GB", { suffix: "", value: "-12,345" }],
    [-12345.456, "en-GB", { suffix: "", value: "-12,345" }],
    [-12345.5, "en-GB", { suffix: "", value: "-12,346" }],
    [-12345.55, "en-GB", { suffix: "", value: "-12,346" }],
    [-12345.556, "en-GB", { suffix: "", value: "-12,346" }],
    [-123450.456, "en-GB", { suffix: "K", value: "-123.45" }],
    [-123450.556, "en-GB", { suffix: "K", value: "-123.45" }],
    [-1234500.4, "en-GB", { suffix: "M", value: "-1.2345" }],
    [-1234500.5, "en-GB", { suffix: "M", value: "-1.2345" }],
    [-1234500, "en-GB", { suffix: "M", value: "-1.2345" }],
    [-1000000000, "en-GB", { suffix: "B", value: "-1" }],
    [-1233222111, "en-GB", { suffix: "B", value: "-1.2332" }],
    [-0.5678999, "en-GB", { suffix: "", value: "-0.5679" }],
    [-0.5678444, "en-GB", { suffix: "", value: "-0.5678" }],
    [-0.0000056, "en-GB", { suffix: "", value: "-0.00" }],
    [-0.0000956, "en-GB", { suffix: "", value: "-0.0001" }],
    [-0.0000456, "en-GB", { suffix: "", value: "-0.00" }],
    // 'ja' (Japanese)
    [123.45, "ja", { suffix: "", value: "123.45" }],
    [1234.5, "ja", { suffix: "", value: "1,234.5" }],
    [12345, "ja", { suffix: "", value: "12,345" }],
    [12345.4, "ja", { suffix: "", value: "12,345" }],
    [12345.45, "ja", { suffix: "", value: "12,345" }],
    [12345.456, "ja", { suffix: "", value: "12,345" }],
    [12345.5, "ja", { suffix: "", value: "12,346" }],
    [12345.55, "ja", { suffix: "", value: "12,346" }],
    [12345.556, "ja", { suffix: "", value: "12,346" }],
    [123450.456, "ja", { suffix: "K", value: "123.45" }],
    [123450.556, "ja", { suffix: "K", value: "123.45" }],
    [1234500.4, "ja", { suffix: "M", value: "1.2345" }],
    [1234500.5, "ja", { suffix: "M", value: "1.2345" }],
    [1234500, "ja", { suffix: "M", value: "1.2345" }],
    [1000000000, "ja", { suffix: "B", value: "1" }],
    [1233222111, "ja", { suffix: "B", value: "1.2332" }],
    [0.5678999, "ja", { suffix: "", value: "0.5679" }],
    [0.5678444, "ja", { suffix: "", value: "0.5678" }],
    [0.0000056, "ja", { suffix: "", value: "0.00" }],
    [0.0000956, "ja", { suffix: "", value: "0.0001" }],
    [0.0000456, "ja", { suffix: "", value: "0.00" }],
    [-123.45, "ja", { suffix: "", value: "-123.45" }],
    [-1234.5, "ja", { suffix: "", value: "-1,234.5" }],
    [-12345, "ja", { suffix: "", value: "-12,345" }],
    [-12345.4, "ja", { suffix: "", value: "-12,345" }],
    [-12345.45, "ja", { suffix: "", value: "-12,345" }],
    [-12345.456, "ja", { suffix: "", value: "-12,345" }],
    [-12345.5, "ja", { suffix: "", value: "-12,346" }],
    [-12345.55, "ja", { suffix: "", value: "-12,346" }],
    [-12345.556, "ja", { suffix: "", value: "-12,346" }],
    [-123450.456, "ja", { suffix: "K", value: "-123.45" }],
    [-123450.556, "ja", { suffix: "K", value: "-123.45" }],
    [-1234500.4, "ja", { suffix: "M", value: "-1.2345" }],
    [-1234500.5, "ja", { suffix: "M", value: "-1.2345" }],
    [-1234500, "ja", { suffix: "M", value: "-1.2345" }],
    [-1000000000, "ja", { suffix: "B", value: "-1" }],
    [-1233222111, "ja", { suffix: "B", value: "-1.2332" }],
    [-0.5678999, "ja", { suffix: "", value: "-0.5679" }],
    [-0.5678444, "ja", { suffix: "", value: "-0.5678" }],
    [-0.0000056, "ja", { suffix: "", value: "-0.00" }],
    [-0.0000956, "ja", { suffix: "", value: "-0.0001" }],
    [-0.0000456, "ja", { suffix: "", value: "-0.00" }],
    // 'ru' (Russian)
    [123.45, "ru", { suffix: "", value: "123,45" }],
    [1234.5, "ru", { suffix: "", value: "1 234,5" }],
    [12345, "ru", { suffix: "", value: "12 345" }],
    [12345.4, "ru", { suffix: "", value: "12 345" }],
    [12345.45, "ru", { suffix: "", value: "12 345" }],
    [12345.456, "ru", { suffix: "", value: "12 345" }],
    [12345.5, "ru", { suffix: "", value: "12 346" }],
    [12345.55, "ru", { suffix: "", value: "12 346" }],
    [12345.556, "ru", { suffix: "", value: "12 346" }],
    [123450.456, "ru", { suffix: "K", value: "123,45" }],
    [123450.556, "ru", { suffix: "K", value: "123,45" }],
    [1234500.4, "ru", { suffix: "M", value: "1,2345" }],
    [1234500.5, "ru", { suffix: "M", value: "1,2345" }],
    [1234500, "ru", { suffix: "M", value: "1,2345" }],
    [1000000000, "ru", { suffix: "B", value: "1" }],
    [1233222111, "ru", { suffix: "B", value: "1,2332" }],
    [0.5678999, "ru", { suffix: "", value: "0,5679" }],
    [0.5678444, "ru", { suffix: "", value: "0,5678" }],
    [0.0000056, "ru", { suffix: "", value: "0,00" }],
    [0.0000956, "ru", { suffix: "", value: "0,0001" }],
    [0.0000456, "ru", { suffix: "", value: "0,00" }],
    [-123.45, "ru", { suffix: "", value: "-123,45" }],
    [-1234.5, "ru", { suffix: "", value: "-1 234,5" }],
    [-12345, "ru", { suffix: "", value: "-12 345" }],
    [-12345.4, "ru", { suffix: "", value: "-12 345" }],
    [-12345.45, "ru", { suffix: "", value: "-12 345" }],
    [-12345.456, "ru", { suffix: "", value: "-12 345" }],
    [-12345.5, "ru", { suffix: "", value: "-12 346" }],
    [-12345.55, "ru", { suffix: "", value: "-12 346" }],
    [-12345.556, "ru", { suffix: "", value: "-12 346" }],
    [-123450.456, "ru", { suffix: "K", value: "-123,45" }],
    [-123450.556, "ru", { suffix: "K", value: "-123,45" }],
    [-1234500.4, "ru", { suffix: "M", value: "-1,2345" }],
    [-1234500.5, "ru", { suffix: "M", value: "-1,2345" }],
    [-1234500, "ru", { suffix: "M", value: "-1,2345" }],
    [-1000000000, "ru", { suffix: "B", value: "-1" }],
    [-1233222111, "ru", { suffix: "B", value: "-1,2332" }],
    [-0.5678999, "ru", { suffix: "", value: "-0,5679" }],
    [-0.5678444, "ru", { suffix: "", value: "-0,5678" }],
    [-0.0000056, "ru", { suffix: "", value: "-0,00" }],
    [-0.0000956, "ru", { suffix: "", value: "-0,0001" }],
    [-0.0000456, "ru", { suffix: "", value: "-0,00" }],
    // 'fr' (French)
    [123.45, "fr", { suffix: "", value: "123,45" }],
    [1234.5, "fr", { suffix: "", value: "1 234,5" }],
    [12345, "fr", { suffix: "", value: "12 345" }],
    [12345.4, "fr", { suffix: "", value: "12 345" }],
    [12345.45, "fr", { suffix: "", value: "12 345" }],
    [12345.456, "fr", { suffix: "", value: "12 345" }],
    [12345.5, "fr", { suffix: "", value: "12 346" }],
    [12345.55, "fr", { suffix: "", value: "12 346" }],
    [12345.556, "fr", { suffix: "", value: "12 346" }],
    [123450.456, "fr", { suffix: "K", value: "123,45" }],
    [123450.556, "fr", { suffix: "K", value: "123,45" }],
    [1234500.4, "fr", { suffix: "M", value: "1,2345" }],
    [1234500.5, "fr", { suffix: "M", value: "1,2345" }],
    [1234500, "fr", { suffix: "M", value: "1,2345" }],
    [1000000000, "fr", { suffix: "B", value: "1" }],
    [1233222111, "fr", { suffix: "B", value: "1,2332" }],
    [0.5678999, "fr", { suffix: "", value: "0,5679" }],
    [0.5678444, "fr", { suffix: "", value: "0,5678" }],
    [0.0000056, "fr", { suffix: "", value: "0,00" }],
    [0.0000956, "fr", { suffix: "", value: "0,0001" }],
    [0.0000456, "fr", { suffix: "", value: "0,00" }],
    [-123.45, "fr", { suffix: "", value: "-123,45" }],
    [-1234.5, "fr", { suffix: "", value: "-1 234,5" }],
    [-12345, "fr", { suffix: "", value: "-12 345" }],
    [-12345.4, "fr", { suffix: "", value: "-12 345" }],
    [-12345.45, "fr", { suffix: "", value: "-12 345" }],
    [-12345.456, "fr", { suffix: "", value: "-12 345" }],
    [-12345.5, "fr", { suffix: "", value: "-12 346" }],
    [-12345.55, "fr", { suffix: "", value: "-12 346" }],
    [-12345.556, "fr", { suffix: "", value: "-12 346" }],
    [-123450.456, "fr", { suffix: "K", value: "-123,45" }],
    [-123450.556, "fr", { suffix: "K", value: "-123,45" }],
    [-1234500.4, "fr", { suffix: "M", value: "-1,2345" }],
    [-1234500.5, "fr", { suffix: "M", value: "-1,2345" }],
    [-1234500, "fr", { suffix: "M", value: "-1,2345" }],
    [-1000000000, "fr", { suffix: "B", value: "-1" }],
    [-1233222111, "fr", { suffix: "B", value: "-1,2332" }],
    [-0.5678999, "fr", { suffix: "", value: "-0,5679" }],
    [-0.5678444, "fr", { suffix: "", value: "-0,5678" }],
    [-0.0000056, "fr", { suffix: "", value: "-0,00" }],
    [-0.0000956, "fr", { suffix: "", value: "-0,0001" }],
    [-0.0000456, "fr", { suffix: "", value: "-0,00" }],
  ])(
    "given value=%p, navigator.language=%p - should return expected output",
    (value, mockedNavigatorLanguage, expected) => {
      // Call the formatter function
      const retValue = defaultNumberCompactFormatter(value as number, {
        locale: mockedNavigatorLanguage,
      });

      // Assert the result
      expect(retValue).toEqual(expected);
    },
  );
});
